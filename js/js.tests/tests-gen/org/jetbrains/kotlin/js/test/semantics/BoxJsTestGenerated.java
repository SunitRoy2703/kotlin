/*
 * Copyright 2010-2021 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.js.test.semantics;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("js/js.translator/testData/box/incremental")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class BoxJsTestGenerated extends AbstractBoxJsTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest0(this::doTest, TargetBackend.JS, testDataFilePath);
    }

    public void testAllFilesPresentInIncremental() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("js/js.translator/testData/box/incremental"), Pattern.compile("^([^_](.+))\\.kt$"), null, TargetBackend.JS, true);
    }

    @TestMetadata("catchScope.kt")
    public void testCatchScope() throws Exception {
        runTest("js/js.translator/testData/box/incremental/catchScope.kt");
    }

    @TestMetadata("classReferencingClass.kt")
    public void testClassReferencingClass() throws Exception {
        runTest("js/js.translator/testData/box/incremental/classReferencingClass.kt");
    }

    @TestMetadata("coroutines.kt")
    public void testCoroutines() throws Exception {
        runTest("js/js.translator/testData/box/incremental/coroutines.kt");
    }

    @TestMetadata("defaultArguments.kt")
    public void testDefaultArguments() throws Exception {
        runTest("js/js.translator/testData/box/incremental/defaultArguments.kt");
    }

    @TestMetadata("enumUsage.kt")
    public void testEnumUsage() throws Exception {
        runTest("js/js.translator/testData/box/incremental/enumUsage.kt");
    }

    @TestMetadata("exportedPackage.kt")
    public void testExportedPackage() throws Exception {
        runTest("js/js.translator/testData/box/incremental/exportedPackage.kt");
    }

    @TestMetadata("forWithoutInit.kt")
    public void testForWithoutInit() throws Exception {
        runTest("js/js.translator/testData/box/incremental/forWithoutInit.kt");
    }

    @TestMetadata("functionReferencingClass.kt")
    public void testFunctionReferencingClass() throws Exception {
        runTest("js/js.translator/testData/box/incremental/functionReferencingClass.kt");
    }

    @TestMetadata("inheritViaAnotherInterface.kt")
    public void testInheritViaAnotherInterface() throws Exception {
        runTest("js/js.translator/testData/box/incremental/inheritViaAnotherInterface.kt");
    }

    @TestMetadata("inline.kt")
    public void testInline() throws Exception {
        runTest("js/js.translator/testData/box/incremental/inline.kt");
    }

    @TestMetadata("inlineLambda.kt")
    public void testInlineLambda() throws Exception {
        runTest("js/js.translator/testData/box/incremental/inlineLambda.kt");
    }

    @TestMetadata("inlineModuleVariable.kt")
    public void testInlineModuleVariable() throws Exception {
        runTest("js/js.translator/testData/box/incremental/inlineModuleVariable.kt");
    }

    @TestMetadata("inlineSuspendFun.kt")
    public void testInlineSuspendFun() throws Exception {
        runTest("js/js.translator/testData/box/incremental/inlineSuspendFun.kt");
    }

    @TestMetadata("inlineableAliasForExternalDeclaration.kt")
    public void testInlineableAliasForExternalDeclaration() throws Exception {
        runTest("js/js.translator/testData/box/incremental/inlineableAliasForExternalDeclaration.kt");
    }

    @TestMetadata("jsModule.kt")
    public void testJsModule() throws Exception {
        runTest("js/js.translator/testData/box/incremental/jsModule.kt");
    }

    @TestMetadata("kClassOnReifiedType.kt")
    public void testKClassOnReifiedType() throws Exception {
        runTest("js/js.translator/testData/box/incremental/kClassOnReifiedType.kt");
    }

    @TestMetadata("kClassOnReifiedTypeInLambda-advanced.kt")
    public void testKClassOnReifiedTypeInLambda_advanced() throws Exception {
        runTest("js/js.translator/testData/box/incremental/kClassOnReifiedTypeInLambda-advanced.kt");
    }

    @TestMetadata("kotlinTestIncremental.kt")
    public void testKotlinTestIncremental() throws Exception {
        runTest("js/js.translator/testData/box/incremental/kotlinTestIncremental.kt");
    }

    @TestMetadata("localDeclarationsClash.kt")
    public void testLocalDeclarationsClash() throws Exception {
        runTest("js/js.translator/testData/box/incremental/localDeclarationsClash.kt");
    }

    @TestMetadata("mainIncremental.kt")
    public void testMainIncremental() throws Exception {
        runTest("js/js.translator/testData/box/incremental/mainIncremental.kt");
    }

    @TestMetadata("multipleExport.kt")
    public void testMultipleExport() throws Exception {
        runTest("js/js.translator/testData/box/incremental/multipleExport.kt");
    }

    @TestMetadata("multipleReimport.kt")
    public void testMultipleReimport() throws Exception {
        runTest("js/js.translator/testData/box/incremental/multipleReimport.kt");
    }

    @TestMetadata("packagesWithSameName.kt")
    public void testPackagesWithSameName() throws Exception {
        runTest("js/js.translator/testData/box/incremental/packagesWithSameName.kt");
    }

    @TestMetadata("repeatedImport.kt")
    public void testRepeatedImport() throws Exception {
        runTest("js/js.translator/testData/box/incremental/repeatedImport.kt");
    }

    @TestMetadata("simple.kt")
    public void testSimple() throws Exception {
        runTest("js/js.translator/testData/box/incremental/simple.kt");
    }

    @TestMetadata("sourceMapSourceEmbedding.kt")
    public void testSourceMapSourceEmbedding() throws Exception {
        runTest("js/js.translator/testData/box/incremental/sourceMapSourceEmbedding.kt");
    }

    @TestMetadata("syntheticStatement.kt")
    public void testSyntheticStatement() throws Exception {
        runTest("js/js.translator/testData/box/incremental/syntheticStatement.kt");
    }
}
